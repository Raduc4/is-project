// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Payments {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  eventId      String   @db.ObjectId
  ticketAmount Int
  price        Float
  currency     String
  paymentType  String
  status       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  // event       Event    @relation(fields: [eventId], references: [id])
}

model Ticket {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  title       String
  price       Float
  location    String
  images      String[]
  description String
  hourFrom    String
  hourTo      String
  days        String[]


  bookedByUsers   User[]   @relation("bookedEvents", fields: [bookedByUserIds], references: [id])
  bookedByUserIds String[] @db.ObjectId

  author   User   @relation("tickets", fields: [authorId], references: [id])
  authorId String @db.ObjectId

  savedByUserIds String[] @db.ObjectId
  savedByUsers   User[]   @relation("save", fields: [savedByUserIds], references: [id])
}

model User {
  id                  String               @id @default(auto()) @map("_id") @db.ObjectId
  createdAt           DateTime             @default(now())
  email               String               @unique
  phone               String?              @unique
  passwordHash        String?
  enabled             Boolean
  avatar              String?
  confirmationCode    Int
  isCodeUsed          Boolean
  tickets              Ticket[]            @relation("tickets")
  eventIDs            String[]             @db.ObjectId
  savedTickets       Ticket[]              @relation("save", fields: [eventIDs], references: [id])
  role                UserRole
  payments            Payments[]
  businessDescription String?
  businessName        String?
  businessAddress     String?
  businessPhone       String?
  businessEmail       String?
  businessPostCode    String?
  businessCategory    String?
  businessTags        String[]
  bookedIDs           String[]             @db.ObjectId
  bookedTickets        Ticket[]              @relation("bookedEvents", fields: [bookedIDs], references: [id])
}


enum UserRole {
  USER
  ADMIN
}
